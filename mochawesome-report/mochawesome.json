{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-04-10T04:03:47.419Z",
    "end": "2024-04-10T04:03:53.149Z",
    "duration": 5730,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "96f42258-b36c-4822-8914-1b3d0688a743",
      "title": "",
      "fullFile": "F:\\Users\\Pedro\\a. escritorio secundario\\descargas directamente\\Downloads\\5To Cuatri\\Pro III\\Selenium\\inicioSesion1.js",
      "file": "\\inicioSesion1.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3093b2dd-6e0d-46df-b5ca-2f1d98990daf",
          "title": "Inicio de sesión en GitHub",
          "fullFile": "F:\\Users\\Pedro\\a. escritorio secundario\\descargas directamente\\Downloads\\5To Cuatri\\Pro III\\Selenium\\inicioSesion1.js",
          "file": "\\inicioSesion1.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Debería iniciar sesión con éxito",
              "fullTitle": "Inicio de sesión en GitHub Debería iniciar sesión con éxito",
              "timedOut": false,
              "duration": 5724,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser('chrome').build();\nlet folderName = '3';\ntry {\n    // Crear la carpeta para las capturas de pantalla si no existe\n    if (!fs.existsSync(folderName)) {\n        fs.mkdirSync(folderName);\n    }\n    // Ingresar a la página de inicio de sesión de GitHub\n    await driver.get('https://github.com/login?return_to=https%3A%2F%2Fgithub.com%2Fgithub');\n    await takeScreenshot(driver, folderName, '1_login_page.png');\n    // Rellenar el campo de nombre de usuario\n    await driver.wait(until.elementLocated(By.id('login_field')), 5000);\n    await driver.findElement(By.id('login_field')).sendKeys('goumanpenguinNgrok01', Key.RETURN);\n    await takeScreenshot(driver, folderName, '2_username_entered.png');\n    // Rellenar el campo de contraseña\n    await driver.wait(until.elementLocated(By.id('password')), 5000);\n    await driver.findElement(By.id('password')).sendKeys('$Pantonio2404$', Key.RETURN);\n    await takeScreenshot(driver, folderName, '3_password_entered.png');\n    console.log(\"Prueba exitosa.\");\n} catch (error) {\n    console.error(\"Error en la prueba:\", error);\n    await takeScreenshot(driver, folderName, 'error_screenshot.png');\n} finally {\n    await driver.quit();\n    // Generar el reporte en formato Mochawesome\n    generateReport();\n}",
              "err": {},
              "uuid": "3123ef92-e3fe-4a82-b622-a4326fd15dcb",
              "parentUUID": "3093b2dd-6e0d-46df-b5ca-2f1d98990daf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3123ef92-e3fe-4a82-b622-a4326fd15dcb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5724,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 50000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "[object Object]": true
      },
      "version": "6.2.0"
    }
  }
}